{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/College/Spring2025/CSE6242/RecomViz/basic visualization/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport GrapherWrapper from \"./GrapherWrapper\";\nimport { SVD } from \"svd-js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_DATA_POINTS = 5000; // Adjust based on your system's memory\nconst NUM_FACTORS = 20;\nconst loadCSVData = csvFilePath => {\n  return new Promise((resolve, reject) => {\n    Papa.parse(csvFilePath, {\n      download: true,\n      dynamicTyping: true,\n      complete: result => {\n        resolve(result.data.slice(1, MAX_DATA_POINTS)); // Skip header\n        // resolve(result.data);\n      },\n      error: error => reject(error)\n    });\n  });\n};\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [levels, setLevels] = useState(1);\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    edges: []\n  });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [model, setModel] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  useEffect(() => {\n    const initializeModel = async () => {\n      setIsProcessing(true);\n      try {\n        const data = await loadCSVData(\"sample_user_ratings.csv\");\n        const processed = processRatingsData(data);\n        setModel(processed);\n      } catch (error) {\n        console.error(\"Error initializing model:\", error);\n      }\n      setIsProcessing(false);\n    };\n    initializeModel();\n  }, []);\n  const processRatingsData = data => {\n    // Parse CSV data\n    console.log(\"Raw Data:\", data);\n    console.log(\"type of data rows\", typeof data[1][1]);\n    const ratings = data.map(row => ({\n      user: row[2],\n      item: row[1],\n      rating: parseFloat(row[0])\n    }));\n    console.log(\"Parsed Ratings:\", ratings);\n\n    // Create mappings\n    const users = [...new Set(ratings.map(r => r.user))];\n    const items = [...new Set(ratings.map(r => r.item))];\n    const userMap = new Map(users.map((u, i) => [u, i]));\n    const itemMap = new Map(items.map((i, idx) => [i, idx]));\n\n    // Calculate global mean\n    const globalMean = ratings.reduce((sum, r) => sum + r.rating, 0) / ratings.length;\n\n    // Calculate biases\n    const userBias = calculateBias(ratings, \"user\", globalMean, userMap);\n    const itemBias = calculateBias(ratings, \"item\", globalMean, itemMap);\n\n    // Create COO matrix\n    const rows = [];\n    const cols = [];\n    const values = [];\n    ratings.forEach(r => {\n      const residual = r.rating - globalMean - userBias.get(r.user) - itemBias.get(r.item);\n      rows.push(userMap.get(r.user));\n      cols.push(itemMap.get(r.item));\n      values.push(residual);\n    });\n\n    // Convert COO to dense matrix\n    const denseMatrix = cooToDense(rows, cols, values, users.length, items.length);\n\n    // Perform SVD\n    const {\n      u,\n      v,\n      q\n    } = SVD(denseMatrix, NUM_FACTORS);\n    const userFactors = u;\n    const itemFactors = v.transpose();\n    return {\n      users,\n      items,\n      userMap,\n      itemMap,\n      globalMean,\n      userBias,\n      itemBias,\n      userFactors,\n      itemFactors,\n      ratings\n    };\n  };\n  const cooToDense = (rows, cols, values, nRows, nCols) => {\n    const matrix = Array.from({\n      length: nRows\n    }, () => new Array(nCols).fill(0));\n    for (let i = 0; i < rows.length; i++) {\n      matrix[rows[i]][cols[i]] = values[i];\n    }\n    return matrix;\n  };\n  const calculateBias = (ratings, entityType, globalMean, entityMap) => {\n    const biasMap = new Map();\n    const sumMap = new Map();\n    const countMap = new Map();\n    ratings.forEach(r => {\n      const entity = entityType === \"user\" ? r.user : r.item;\n      const residual = r.rating - globalMean - (entityType === \"user\" ? 0 : (model === null || model === void 0 ? void 0 : model.userBias.get(r.user)) || 0);\n      sumMap.set(entity, (sumMap.get(entity) || 0) + residual);\n      countMap.set(entity, (countMap.get(entity) || 0) + 1);\n    });\n    sumMap.forEach((sum, entity) => {\n      biasMap.set(entity, sum / countMap.get(entity));\n    });\n    return biasMap;\n  };\n  const getRecommendations = userId => {\n    if (!model || !model.userMap.has(userId)) return [];\n    const userIdx = model.userMap.get(userId);\n    const userFactor = model.userFactors[userIdx];\n    const userB = model.userBias.get(userId) || 0;\n    return model.items.filter(item => !model.ratings.some(r => r.user === userId && r.item === item)).map(item => {\n      const itemIdx = model.itemMap.get(item);\n      const itemB = model.itemBias.get(item) || 0;\n      const itemFactor = model.itemFactors[itemIdx];\n      const score = model.globalMean + userB + itemB + dotProduct(userFactor, itemFactor);\n      return {\n        item,\n        score\n      };\n    }).sort((a, b) => b.score - a.score).slice(0, 10);\n  };\n  const dotProduct = (a, b) => a.reduce((sum, val, i) => sum + val * b[i], 0);\n  const generateGraphData = recommendations => {\n    const nodes = [{\n      id: `user-${userId}`,\n      label: `User ${userId}`,\n      level: 0\n    }];\n    const edges = [];\n    recommendations.forEach(({\n      item\n    }) => {\n      nodes.push({\n        id: item,\n        label: `${item} (Recommended)`,\n        level: 1\n      });\n      edges.push({\n        source: `user-${userId}`,\n        target: item\n      });\n    });\n    return {\n      nodes,\n      edges\n    };\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!userId || !model) return;\n    const recommendations = getRecommendations(userId);\n    setGraphData(generateGraphData(recommendations));\n    setSelectedNode(null);\n  };\n  const handleNodeClick = useCallback(nodeId => {\n    setSelectedNode(nodeId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recommendation Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Processing data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userId,\n        onChange: e => setUserId(e.target.value),\n        placeholder: \"Enter User ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GrapherWrapper, {\n      nodes: graphData.nodes,\n      edges: graphData.edges,\n      onNodeClick: handleNodeClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Node: \", selectedNode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), selectedNode.startsWith('user-') ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product ID: \", selectedNode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FkBZRM7BrcshcnVhXZQSvy6qCUo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Papa","GrapherWrapper","SVD","jsxDEV","_jsxDEV","MAX_DATA_POINTS","NUM_FACTORS","loadCSVData","csvFilePath","Promise","resolve","reject","parse","download","dynamicTyping","complete","result","data","slice","error","App","_s","userId","setUserId","levels","setLevels","graphData","setGraphData","nodes","edges","selectedNode","setSelectedNode","model","setModel","isProcessing","setIsProcessing","initializeModel","processed","processRatingsData","console","log","ratings","map","row","user","item","rating","parseFloat","users","Set","r","items","userMap","Map","u","i","itemMap","idx","globalMean","reduce","sum","length","userBias","calculateBias","itemBias","rows","cols","values","forEach","residual","get","push","denseMatrix","cooToDense","v","q","userFactors","itemFactors","transpose","nRows","nCols","matrix","Array","from","fill","entityType","entityMap","biasMap","sumMap","countMap","entity","set","getRecommendations","has","userIdx","userFactor","userB","filter","some","itemIdx","itemB","itemFactor","score","dotProduct","sort","a","b","val","generateGraphData","recommendations","id","label","level","source","target","handleSubmit","e","preventDefault","handleNodeClick","nodeId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","placeholder","required","onNodeClick","startsWith","_c","$RefreshReg$"],"sources":["/Users/rohit/College/Spring2025/CSE6242/RecomViz/basic visualization/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport GrapherWrapper from \"./GrapherWrapper\";\nimport { SVD } from \"svd-js\";\nimport \"./App.css\";\n\nconst MAX_DATA_POINTS = 5000; // Adjust based on your system's memory\nconst NUM_FACTORS = 20;\n\nconst loadCSVData = (csvFilePath) => {\n  return new Promise((resolve, reject) => {\n    Papa.parse(csvFilePath, {\n      download: true,\n      dynamicTyping: true,\n      complete: (result) => {\n        resolve(result.data.slice(1, MAX_DATA_POINTS)); // Skip header\n        // resolve(result.data);\n      },\n      error: (error) => reject(error),\n    });\n  });\n};\n\nfunction App() {\n  const [userId, setUserId] = useState(\"\");\n  const [levels, setLevels] = useState(1);\n  const [graphData, setGraphData] = useState({ nodes: [], edges: [] });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [model, setModel] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  useEffect(() => {\n    const initializeModel = async () => {\n      setIsProcessing(true);\n      try {\n        const data = await loadCSVData(\"sample_user_ratings.csv\");\n        const processed = processRatingsData(data);\n        setModel(processed);\n      } catch (error) {\n        console.error(\"Error initializing model:\", error);\n      }\n      setIsProcessing(false);\n    };\n    initializeModel();\n  }, []);\n\n  const processRatingsData = (data) => {\n    // Parse CSV data\n    console.log(\"Raw Data:\", data);\n    console.log(\"type of data rows\", typeof data[1][1]);\n    const ratings = data.map(row => ({\n      user: row[2],\n      item: row[1],\n      rating: parseFloat(row[0])\n    }));\n\n    console.log(\"Parsed Ratings:\", ratings);\n\n    // Create mappings\n    const users = [...new Set(ratings.map(r => r.user))];\n    const items = [...new Set(ratings.map(r => r.item))];\n    const userMap = new Map(users.map((u, i) => [u, i]));\n    const itemMap = new Map(items.map((i, idx) => [i, idx]));\n\n    // Calculate global mean\n    const globalMean = ratings.reduce((sum, r) => sum + r.rating, 0) / ratings.length;\n\n    // Calculate biases\n    const userBias = calculateBias(ratings, \"user\", globalMean, userMap);\n    const itemBias = calculateBias(ratings, \"item\", globalMean, itemMap);\n\n    // Create COO matrix\n    const rows = [];\n    const cols = [];\n    const values = [];\n    \n    ratings.forEach(r => {\n      const residual = r.rating - globalMean - userBias.get(r.user) - itemBias.get(r.item);\n      rows.push(userMap.get(r.user));\n      cols.push(itemMap.get(r.item));\n      values.push(residual);\n    });\n\n    // Convert COO to dense matrix\n    const denseMatrix = cooToDense(rows, cols, values, users.length, items.length);\n\n    // Perform SVD\n    const { u, v, q } = SVD(denseMatrix, NUM_FACTORS);\n    const userFactors = u;\n    const itemFactors = v.transpose();\n\n    return {\n      users,\n      items,\n      userMap,\n      itemMap,\n      globalMean,\n      userBias,\n      itemBias,\n      userFactors,\n      itemFactors,\n      ratings\n    };\n  };\n\n  const cooToDense = (rows, cols, values, nRows, nCols) => {\n    const matrix = Array.from({ length: nRows }, () => new Array(nCols).fill(0));\n    for (let i = 0; i < rows.length; i++) {\n      matrix[rows[i]][cols[i]] = values[i];\n    }\n    return matrix;\n  };\n\n  const calculateBias = (ratings, entityType, globalMean, entityMap) => {\n    const biasMap = new Map();\n    const sumMap = new Map();\n    const countMap = new Map();\n\n    ratings.forEach(r => {\n      const entity = entityType === \"user\" ? r.user : r.item;\n      const residual = r.rating - globalMean - \n        (entityType === \"user\" ? 0 : model?.userBias.get(r.user) || 0);\n\n      sumMap.set(entity, (sumMap.get(entity) || 0) + residual);\n      countMap.set(entity, (countMap.get(entity) || 0) + 1);\n    });\n\n    sumMap.forEach((sum, entity) => {\n      biasMap.set(entity, sum / countMap.get(entity));\n    });\n\n    return biasMap;\n  };\n\n  const getRecommendations = (userId) => {\n    if (!model || !model.userMap.has(userId)) return [];\n    \n    const userIdx = model.userMap.get(userId);\n    const userFactor = model.userFactors[userIdx];\n    const userB = model.userBias.get(userId) || 0;\n\n    return model.items\n      .filter(item => !model.ratings.some(r => r.user === userId && r.item === item))\n      .map(item => {\n        const itemIdx = model.itemMap.get(item);\n        const itemB = model.itemBias.get(item) || 0;\n        const itemFactor = model.itemFactors[itemIdx];\n        const score = model.globalMean + userB + itemB + \n          dotProduct(userFactor, itemFactor);\n        return { item, score };\n      })\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 10);\n  };\n\n  const dotProduct = (a, b) => a.reduce((sum, val, i) => sum + val * b[i], 0);\n\n  const generateGraphData = (recommendations) => {\n    const nodes = [{ id: `user-${userId}`, label: `User ${userId}`, level: 0 }];\n    const edges = [];\n\n    recommendations.forEach(({ item }) => {\n      nodes.push({ id: item, label: `${item} (Recommended)`, level: 1 });\n      edges.push({ source: `user-${userId}`, target: item });\n    });\n\n    return { nodes, edges };\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!userId || !model) return;\n\n    const recommendations = getRecommendations(userId);\n    setGraphData(generateGraphData(recommendations));\n    setSelectedNode(null);\n  };\n\n  const handleNodeClick = useCallback((nodeId) => {\n    setSelectedNode(nodeId);\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <h1>Recommendation Graph</h1>\n      {isProcessing && <div className=\"loading\">Processing data...</div>}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={userId}\n          onChange={(e) => setUserId(e.target.value)}\n          placeholder=\"Enter User ID\"\n          required\n        />\n        <button type=\"submit\">Generate</button>\n      </form>\n\n      <GrapherWrapper\n        nodes={graphData.nodes}\n        edges={graphData.edges}\n        onNodeClick={handleNodeClick}\n      />\n\n      {selectedNode && (\n        <div className=\"details\">\n          <h3>Node: {selectedNode}</h3>\n          {selectedNode.startsWith('user-') ? (\n            <p>User ID: {userId}</p>\n          ) : (\n            <p>Product ID: {selectedNode}</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}