{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/College/Spring2025/CSE6242/RecomViz/basic visualization/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport GrapherWrapper from \"./GrapherWrapper\";\nimport numeric from 'numeric';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadCSVData = csvFilePath => {\n  return new Promise((resolve, reject) => {\n    Papa.parse(csvFilePath, {\n      download: true,\n      complete: result => {\n        resolve(result.data);\n      },\n      error: error => reject(error)\n    });\n  });\n};\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [levels, setLevels] = useState(1);\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    edges: []\n  });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [ratingsData, setRatingsData] = useState([]);\n  const [userBias, setUserBias] = useState({});\n  const [itemBias, setItemBias] = useState({});\n  const [globalMean, setGlobalMean] = useState(0);\n  const [userLatent, setUserLatent] = useState([]);\n  const [itemLatent, setItemLatent] = useState([]);\n  const [userToIdx, setUserToIdx] = useState({});\n  const [productToIdx, setProductToIdx] = useState({});\n  useEffect(() => {\n    loadCSVData(\"sample_user_ratings.csv\").then(data => {\n      setRatingsData(data);\n      processRatingsData(data);\n    }).catch(error => console.error(\"Error loading CSV:\", error));\n  }, []);\n  const processRatingsData = data => {\n    const rawData = data.slice(1); // Remove header row\n    const ratingsDf = rawData.map(row => ({\n      rating: parseFloat(row[0]),\n      product_id: row[1],\n      user_id: row[2]\n    }));\n    const userIds = [...new Set(ratingsDf.map(row => row.user_id))];\n    const productIds = [...new Set(ratingsDf.map(row => row.product_id))];\n    const userToIdx = Object.fromEntries(userIds.map((user, i) => [user, i]));\n    const productToIdx = Object.fromEntries(productIds.map((prod, i) => [prod, i]));\n\n    // Compute Global Mean\n    const globalMean = ratingsDf.reduce((acc, row) => acc + row.rating, 0) / ratingsDf.length;\n    setGlobalMean(globalMean);\n\n    // Compute User Biases\n    const userSumCount = ratingsDf.reduce((acc, row) => {\n      const userId = row.user_id;\n      if (!acc[userId]) acc[userId] = {\n        sum: 0,\n        count: 0\n      };\n      acc[userId].sum += row.rating;\n      acc[userId].count += 1;\n      return acc;\n    }, {});\n    const userBias = {};\n    Object.keys(userSumCount).forEach(userId => {\n      userBias[userId] = userSumCount[userId].sum / userSumCount[userId].count - globalMean;\n    });\n    setUserBias(userBias);\n\n    // Compute Item Biases\n    const residuals = ratingsDf.map(row => ({\n      productId: row.product_id,\n      residual: row.rating - globalMean - userBias[row.user_id]\n    }));\n    const itemSumCount = residuals.reduce((acc, {\n      productId,\n      residual\n    }) => {\n      if (!acc[productId]) acc[productId] = {\n        sum: 0,\n        count: 0\n      };\n      acc[productId].sum += residual;\n      acc[productId].count += 1;\n      return acc;\n    }, {});\n    const itemBias = {};\n    Object.keys(itemSumCount).forEach(prod => {\n      itemBias[prod] = itemSumCount[prod].sum / itemSumCount[prod].count;\n    });\n    setItemBias(itemBias);\n\n    // Build User-Item Matrix\n    const numUsers = userIds.length;\n    const numProducts = productIds.length;\n    const matrix = Array.from({\n      length: numUsers\n    }, () => Array(numProducts).fill(0));\n    ratingsDf.forEach(row => {\n      const userIdx = userToIdx[row.user_id];\n      const productIdx = productToIdx[row.product_id];\n      matrix[userIdx][productIdx] = row.rating - globalMean - userBias[row.user_id] - itemBias[row.product_id];\n    });\n\n    // Apply SVD\n    const svdResult = numeric.svd(matrix);\n    const nFactors = 20;\n    const userLatent = svdResult.U.map(row => row.slice(0, nFactors).map((val, i) => val * svdResult.S[i]));\n    const itemLatent = svdResult.V.map(row => row.slice(0, nFactors).map((val, i) => val * svdResult.S[i]));\n    setUserLatent(userLatent);\n    setItemLatent(itemLatent);\n    setUserToIdx(userToIdx);\n    setProductToIdx(productToIdx);\n  };\n  const getRecommendationsSVD = userId => {\n    if (!userToIdx[userId]) return [];\n    const userIndex = userToIdx[userId];\n    const userB = userBias[userId] || 0;\n    return Object.keys(productToIdx).map(prod => {\n      const productIdx = productToIdx[prod];\n      const itemBiasVal = itemBias[prod] || 0;\n      const predictedResidual = userLatent[userIndex].reduce((sum, val, i) => sum + val * (itemLatent[productIdx][i] || 0), 0);\n      return {\n        product_id: prod,\n        predicted_rating: globalMean + userB + itemBiasVal + predictedResidual\n      };\n    }).filter(rec => !ratingsData.slice(1).some(row => row[2] === userId && row[1] === rec.product_id)).sort((a, b) => b.predicted_rating - a.predicted_rating).slice(0, 10);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!userId) return;\n    const recommendations = getRecommendationsSVD(userId);\n    const data = generateGraphData(recommendations, levels);\n    setGraphData(data);\n    setSelectedNode(null);\n  };\n  const generateGraphData = (recommendations, levels) => {\n    const nodes = [{\n      id: `user-${userId}`,\n      label: `User ${userId}`,\n      level: 0\n    }];\n    const edges = [];\n    recommendations.forEach(rec => {\n      nodes.push({\n        id: rec.product_id,\n        label: `${rec.product_id} (Recommended)`,\n        level: 1\n      });\n      edges.push({\n        source: `user-${userId}`,\n        target: rec.product_id\n      });\n    });\n    return {\n      nodes,\n      edges\n    };\n  };\n  const handleNodeClick = React.useCallback(nodeId => {\n    setSelectedNode(nodeId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Interactive Recommendation Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userId\",\n        children: \"User ID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"userId\",\n        type: \"text\",\n        value: userId,\n        onChange: e => setUserId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"levels\",\n        children: \" # of levels: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"levels\",\n        type: \"number\",\n        min: \"1\",\n        value: levels,\n        onChange: e => setLevels(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-section\",\n      children: /*#__PURE__*/_jsxDEV(GrapherWrapper, {\n        nodes: graphData.nodes,\n        edges: graphData.edges,\n        onNodeClick: handleNodeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Node Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You clicked on: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: selectedNode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lIW9z2yy7DGJMU7vNovS6Sp6+GU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Papa","GrapherWrapper","numeric","jsxDEV","_jsxDEV","loadCSVData","csvFilePath","Promise","resolve","reject","parse","download","complete","result","data","error","App","_s","userId","setUserId","levels","setLevels","graphData","setGraphData","nodes","edges","selectedNode","setSelectedNode","ratingsData","setRatingsData","userBias","setUserBias","itemBias","setItemBias","globalMean","setGlobalMean","userLatent","setUserLatent","itemLatent","setItemLatent","userToIdx","setUserToIdx","productToIdx","setProductToIdx","then","processRatingsData","catch","console","rawData","slice","ratingsDf","map","row","rating","parseFloat","product_id","user_id","userIds","Set","productIds","Object","fromEntries","user","i","prod","reduce","acc","length","userSumCount","sum","count","keys","forEach","residuals","productId","residual","itemSumCount","numUsers","numProducts","matrix","Array","from","fill","userIdx","productIdx","svdResult","svd","nFactors","U","val","S","V","getRecommendationsSVD","userIndex","userB","itemBiasVal","predictedResidual","predicted_rating","filter","rec","some","sort","a","b","handleSubmit","e","preventDefault","recommendations","generateGraphData","id","label","level","push","source","target","handleNodeClick","useCallback","nodeId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","required","min","Number","onNodeClick","_c","$RefreshReg$"],"sources":["/Users/rohit/College/Spring2025/CSE6242/RecomViz/basic visualization/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Papa from \"papaparse\";\nimport GrapherWrapper from \"./GrapherWrapper\";\nimport numeric from 'numeric';\nimport \"./App.css\";\n\nconst loadCSVData = (csvFilePath) => {\n  return new Promise((resolve, reject) => {\n    Papa.parse(csvFilePath, {\n      download: true,\n      complete: (result) => {\n        resolve(result.data);\n      },\n      error: (error) => reject(error),\n    });\n  });\n};\n\nfunction App() {\n  const [userId, setUserId] = useState(\"\");\n  const [levels, setLevels] = useState(1);\n  const [graphData, setGraphData] = useState({ nodes: [], edges: [] });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [ratingsData, setRatingsData] = useState([]);\n  const [userBias, setUserBias] = useState({});\n  const [itemBias, setItemBias] = useState({});\n  const [globalMean, setGlobalMean] = useState(0);\n  const [userLatent, setUserLatent] = useState([]);\n  const [itemLatent, setItemLatent] = useState([]);\n  const [userToIdx, setUserToIdx] = useState({});\n  const [productToIdx, setProductToIdx] = useState({});\n\n  useEffect(() => {\n    loadCSVData(\"sample_user_ratings.csv\")\n      .then((data) => {\n        setRatingsData(data);\n        processRatingsData(data);\n      })\n      .catch((error) => console.error(\"Error loading CSV:\", error));\n  }, []);\n\n  const processRatingsData = (data) => {\n    const rawData = data.slice(1); // Remove header row\n    const ratingsDf = rawData.map(row => ({\n      rating: parseFloat(row[0]),\n      product_id: row[1],\n      user_id: row[2]\n    }));\n\n    const userIds = [...new Set(ratingsDf.map(row => row.user_id))];\n    const productIds = [...new Set(ratingsDf.map(row => row.product_id))];\n\n    const userToIdx = Object.fromEntries(userIds.map((user, i) => [user, i]));\n    const productToIdx = Object.fromEntries(productIds.map((prod, i) => [prod, i]));\n\n    // Compute Global Mean\n    const globalMean = ratingsDf.reduce((acc, row) => acc + row.rating, 0) / ratingsDf.length;\n    setGlobalMean(globalMean);\n\n    // Compute User Biases\n    const userSumCount = ratingsDf.reduce((acc, row) => {\n      const userId = row.user_id;\n      if (!acc[userId]) acc[userId] = { sum: 0, count: 0 };\n      acc[userId].sum += row.rating;\n      acc[userId].count += 1;\n      return acc;\n    }, {});\n\n    const userBias = {};\n    Object.keys(userSumCount).forEach(userId => {\n      userBias[userId] = (userSumCount[userId].sum / userSumCount[userId].count) - globalMean;\n    });\n    setUserBias(userBias);\n\n    // Compute Item Biases\n    const residuals = ratingsDf.map(row => ({\n      productId: row.product_id,\n      residual: row.rating - globalMean - userBias[row.user_id]\n    }));\n\n    const itemSumCount = residuals.reduce((acc, { productId, residual }) => {\n      if (!acc[productId]) acc[productId] = { sum: 0, count: 0 };\n      acc[productId].sum += residual;\n      acc[productId].count += 1;\n      return acc;\n    }, {});\n\n    const itemBias = {};\n    Object.keys(itemSumCount).forEach(prod => {\n      itemBias[prod] = itemSumCount[prod].sum / itemSumCount[prod].count;\n    });\n    setItemBias(itemBias);\n\n    // Build User-Item Matrix\n    const numUsers = userIds.length;\n    const numProducts = productIds.length;\n    const matrix = Array.from({ length: numUsers }, () => Array(numProducts).fill(0));\n\n    ratingsDf.forEach(row => {\n      const userIdx = userToIdx[row.user_id];\n      const productIdx = productToIdx[row.product_id];\n      matrix[userIdx][productIdx] = row.rating - globalMean - userBias[row.user_id] - itemBias[row.product_id];\n    });\n\n    // Apply SVD\n    const svdResult = numeric.svd(matrix);\n    const nFactors = 20;\n\n    const userLatent = svdResult.U.map(row => \n      row.slice(0, nFactors).map((val, i) => val * svdResult.S[i])\n    );\n    const itemLatent = svdResult.V.map(row => \n      row.slice(0, nFactors).map((val, i) => val * svdResult.S[i])\n    );\n\n    setUserLatent(userLatent);\n    setItemLatent(itemLatent);\n    setUserToIdx(userToIdx);\n    setProductToIdx(productToIdx);\n  };\n\n  const getRecommendationsSVD = (userId) => {\n    if (!userToIdx[userId]) return [];\n    const userIndex = userToIdx[userId];\n    const userB = userBias[userId] || 0;\n\n    return Object.keys(productToIdx).map(prod => {\n      const productIdx = productToIdx[prod];\n      const itemBiasVal = itemBias[prod] || 0;\n      const predictedResidual = userLatent[userIndex].reduce((sum, val, i) => \n        sum + val * (itemLatent[productIdx][i] || 0), 0\n      );\n      return {\n        product_id: prod,\n        predicted_rating: globalMean + userB + itemBiasVal + predictedResidual\n      };\n    }).filter(rec => \n      !ratingsData.slice(1).some(row => \n        row[2] === userId && row[1] === rec.product_id\n      )\n    ).sort((a, b) => b.predicted_rating - a.predicted_rating).slice(0, 10);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!userId) return;\n\n    const recommendations = getRecommendationsSVD(userId);\n    const data = generateGraphData(recommendations, levels);\n    setGraphData(data);\n    setSelectedNode(null);\n  };\n\n  const generateGraphData = (recommendations, levels) => {\n    const nodes = [{ id: `user-${userId}`, label: `User ${userId}`, level: 0 }];\n    const edges = [];\n\n    recommendations.forEach(rec => {\n      nodes.push({ id: rec.product_id, label: `${rec.product_id} (Recommended)`, level: 1 });\n      edges.push({ source: `user-${userId}`, target: rec.product_id });\n    });\n\n    return { nodes, edges };\n  };\n\n  const handleNodeClick = React.useCallback((nodeId) => {\n    setSelectedNode(nodeId);\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <h1>Interactive Recommendation Graph</h1>\n\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"userId\">User ID: </label>\n        <input\n          id=\"userId\"\n          type=\"text\"\n          value={userId}\n          onChange={(e) => setUserId(e.target.value)}\n          required\n        />\n\n        <label htmlFor=\"levels\"> # of levels: </label>\n        <input\n          id=\"levels\"\n          type=\"number\"\n          min=\"1\"\n          value={levels}\n          onChange={(e) => setLevels(Number(e.target.value))}\n        />\n\n        <button type=\"submit\">Generate Graph</button>\n      </form>\n\n      <div className=\"graph-section\">\n        <GrapherWrapper\n          nodes={graphData.nodes}\n          edges={graphData.edges}\n          onNodeClick={handleNodeClick}\n        />\n      </div>\n\n      {selectedNode && (\n        <div className=\"detail-section\">\n          <h2>Node Details</h2>\n          <p>You clicked on: <strong>{selectedNode}</strong></p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}