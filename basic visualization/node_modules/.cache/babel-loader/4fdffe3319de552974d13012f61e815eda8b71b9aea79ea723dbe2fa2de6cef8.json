{"ast":null,"code":"var _jsxFileName = \"/Users/rohit/College/Spring2025/CSE6242/RecomViz/basic visualization/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport GrapherWrapper from \"./GrapherWrapper\";\nimport { SVD } from \"svd-js\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_DATA_POINTS = 5000;\nconst NUM_FACTORS = 20;\nconst loadCSVData = csvFilePath => {\n  return new Promise((resolve, reject) => {\n    Papa.parse(csvFilePath, {\n      download: true,\n      dynamicTyping: true,\n      complete: result => {\n        resolve(result.data.slice(1, MAX_DATA_POINTS));\n      },\n      error: error => reject(error)\n    });\n  });\n};\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [graphData, setGraphData] = useState({\n    nodes: [],\n    edges: []\n  });\n  const [model, setModel] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  useEffect(() => {\n    const initializeModel = async () => {\n      setIsProcessing(true);\n      try {\n        const rawData = await loadCSVData(\"sample_user_ratings.csv\");\n        const validData = rawData.filter(row => row.length >= 3);\n        const ratings = validData.map(row => ({\n          user: String(row[2]),\n          item: String(row[1]),\n          rating: parseFloat(row[0]) || 0\n        })).filter(r => r.user && r.item);\n        const users = [...new Set(ratings.map(r => r.user))];\n        const items = [...new Set(ratings.map(r => r.item))];\n\n        // Calculate biases exactly like Jupyter notebook\n        const globalMean = ratings.reduce((sum, r) => sum + r.rating, 0) / ratings.length;\n\n        // User biases\n        const userBias = ratings.reduce((acc, r) => {\n          acc[r.user] = acc[r.user] || {\n            sum: 0,\n            count: 0\n          };\n          acc[r.user].sum += r.rating - globalMean;\n          acc[r.user].count++;\n          return acc;\n        }, {});\n        Object.keys(userBias).forEach(user => {\n          userBias[user] = userBias[user].sum / userBias[user].count;\n        });\n\n        // Item biases\n        const itemBias = ratings.reduce((acc, r) => {\n          const residual = r.rating - globalMean - userBias[r.user];\n          acc[r.item] = acc[r.item] || {\n            sum: 0,\n            count: 0\n          };\n          acc[r.item].sum += residual;\n          acc[r.item].count++;\n          return acc;\n        }, {});\n        Object.keys(itemBias).forEach(item => {\n          itemBias[item] = itemBias[item].sum / itemBias[item].count;\n        });\n\n        // Create COO matrix\n        const rows = [];\n        const cols = [];\n        const values = [];\n        ratings.forEach(r => {\n          const residual = r.rating - globalMean - userBias[r.user] - itemBias[r.item];\n          rows.push(users.indexOf(r.user));\n          cols.push(items.indexOf(r.item));\n          values.push(residual);\n        });\n\n        // Convert to dense matrix with proper orientation\n        const shouldTranspose = users.length < items.length;\n        const matrix = Array.from({\n          length: shouldTranspose ? items.length : users.length\n        }, () => new Array(shouldTranspose ? users.length : items.length).fill(0));\n        rows.forEach((rowIdx, i) => {\n          const colIdx = cols[i];\n          if (shouldTranspose) {\n            matrix[colIdx][rowIdx] = values[i];\n          } else {\n            matrix[rowIdx][colIdx] = values[i];\n          }\n        });\n\n        // Perform SVD\n        const {\n          u,\n          v\n        } = SVD(matrix, NUM_FACTORS);\n        const userFactors = shouldTranspose ? v : u;\n        const itemFactors = shouldTranspose ? u : v;\n        setModel({\n          users,\n          items,\n          userBias,\n          itemBias,\n          globalMean,\n          userFactors,\n          itemFactors: itemFactors[0],\n          // Align with sklearn's components_\n          userMap: new Map(users.map((u, i) => [u, i])),\n          itemMap: new Map(items.map((i, idx) => [i, idx])),\n          ratings\n        });\n      } catch (error) {\n        console.error(\"Error:\", error);\n        alert(`Initialization failed: ${error.message}`);\n      }\n      setIsProcessing(false);\n    };\n    initializeModel();\n  }, []);\n  const getRecommendations = userId => {\n    if (!model || !model.userMap.has(userId)) return [];\n    const userIdx = model.userMap.get(userId);\n    const userFactor = model.userFactors[userIdx];\n    const userB = model.userBias[userId] || 0;\n    return model.items.filter(item => !model.ratings.some(r => r.user === userId && r.item === item)).map(item => {\n      const itemIdx = model.itemMap.get(item);\n      const itemB = model.itemBias[item] || 0;\n      const score = model.globalMean + userB + itemB + numeric.dot(userFactor, model.itemFactors[itemIdx]);\n      return {\n        item,\n        score\n      };\n    }).sort((a, b) => b.score - a.score).slice(0, 10);\n  };\n  const dotProduct = (a, b) => a.reduce((sum, val, i) => sum + val * b[i], 0);\n  const generateGraphData = recommendations => {\n    const nodes = [{\n      id: `user-${userId}`,\n      label: `User ${userId}`,\n      level: 0\n    }];\n    const edges = [];\n    recommendations.forEach(({\n      item\n    }) => {\n      nodes.push({\n        id: item,\n        label: `${item} (Recommended)`,\n        level: 1\n      });\n      edges.push({\n        source: `user-${userId}`,\n        target: item\n      });\n    });\n    return {\n      nodes,\n      edges\n    };\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!userId || !model) return;\n    const recommendations = getRecommendations(userId);\n    setGraphData(generateGraphData(recommendations));\n    setSelectedNode(null);\n  };\n  const handleNodeClick = useCallback(nodeId => {\n    setSelectedNode(nodeId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recommendation Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Processing data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userId,\n        onChange: e => setUserId(e.target.value),\n        placeholder: \"Enter User ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GrapherWrapper, {\n      nodes: graphData.nodes,\n      edges: graphData.edges,\n      onNodeClick: handleNodeClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Node: \", selectedNode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), selectedNode.startsWith('user-') ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User ID: \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Product ID: \", selectedNode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vrtS7VNsu6KQOO+1Ni8avXqDLbk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Papa","GrapherWrapper","SVD","jsxDEV","_jsxDEV","MAX_DATA_POINTS","NUM_FACTORS","loadCSVData","csvFilePath","Promise","resolve","reject","parse","download","dynamicTyping","complete","result","data","slice","error","App","_s","userId","setUserId","graphData","setGraphData","nodes","edges","model","setModel","isProcessing","setIsProcessing","initializeModel","rawData","validData","filter","row","length","ratings","map","user","String","item","rating","parseFloat","r","users","Set","items","globalMean","reduce","sum","userBias","acc","count","Object","keys","forEach","itemBias","residual","rows","cols","values","push","indexOf","shouldTranspose","matrix","Array","from","fill","rowIdx","i","colIdx","u","v","userFactors","itemFactors","userMap","Map","itemMap","idx","console","alert","message","getRecommendations","has","userIdx","get","userFactor","userB","some","itemIdx","itemB","score","numeric","dot","sort","a","b","dotProduct","val","generateGraphData","recommendations","id","label","level","source","target","handleSubmit","e","preventDefault","setSelectedNode","handleNodeClick","nodeId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","placeholder","required","onNodeClick","selectedNode","startsWith","_c","$RefreshReg$"],"sources":["/Users/rohit/College/Spring2025/CSE6242/RecomViz/basic visualization/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport Papa from \"papaparse\";\nimport GrapherWrapper from \"./GrapherWrapper\";\nimport { SVD } from \"svd-js\";\nimport \"./App.css\";\n\nconst MAX_DATA_POINTS = 5000;\nconst NUM_FACTORS = 20;\n\nconst loadCSVData = (csvFilePath) => {\n  return new Promise((resolve, reject) => {\n    Papa.parse(csvFilePath, {\n      download: true,\n      dynamicTyping: true,\n      complete: (result) => {\n        resolve(result.data.slice(1, MAX_DATA_POINTS));\n      },\n      error: (error) => reject(error),\n    });\n  });\n};\n\nfunction App() {\n  const [userId, setUserId] = useState(\"\");\n  const [graphData, setGraphData] = useState({ nodes: [], edges: [] });\n  const [model, setModel] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  useEffect(() => {\n    const initializeModel = async () => {\n      setIsProcessing(true);\n      try {\n        const rawData = await loadCSVData(\"sample_user_ratings.csv\");\n        const validData = rawData.filter(row => row.length >= 3);\n        \n        const ratings = validData.map(row => ({\n          user: String(row[2]),\n          item: String(row[1]),\n          rating: parseFloat(row[0]) || 0\n        })).filter(r => r.user && r.item);\n\n        const users = [...new Set(ratings.map(r => r.user))];\n        const items = [...new Set(ratings.map(r => r.item))];\n        \n        // Calculate biases exactly like Jupyter notebook\n        const globalMean = ratings.reduce((sum, r) => sum + r.rating, 0) / ratings.length;\n        \n        // User biases\n        const userBias = ratings.reduce((acc, r) => {\n          acc[r.user] = acc[r.user] || { sum: 0, count: 0 };\n          acc[r.user].sum += r.rating - globalMean;\n          acc[r.user].count++;\n          return acc;\n        }, {});\n        \n        Object.keys(userBias).forEach(user => {\n          userBias[user] = userBias[user].sum / userBias[user].count;\n        });\n\n        // Item biases\n        const itemBias = ratings.reduce((acc, r) => {\n          const residual = r.rating - globalMean - userBias[r.user];\n          acc[r.item] = acc[r.item] || { sum: 0, count: 0 };\n          acc[r.item].sum += residual;\n          acc[r.item].count++;\n          return acc;\n        }, {});\n\n        Object.keys(itemBias).forEach(item => {\n          itemBias[item] = itemBias[item].sum / itemBias[item].count;\n        });\n\n        // Create COO matrix\n        const rows = [];\n        const cols = [];\n        const values = [];\n        \n        ratings.forEach(r => {\n          const residual = r.rating - globalMean - userBias[r.user] - itemBias[r.item];\n          rows.push(users.indexOf(r.user));\n          cols.push(items.indexOf(r.item));\n          values.push(residual);\n        });\n\n        // Convert to dense matrix with proper orientation\n        const shouldTranspose = users.length < items.length;\n        const matrix = Array.from({ length: shouldTranspose ? items.length : users.length }, () => \n          new Array(shouldTranspose ? users.length : items.length).fill(0)\n        );\n\n        rows.forEach((rowIdx, i) => {\n          const colIdx = cols[i];\n          if (shouldTranspose) {\n            matrix[colIdx][rowIdx] = values[i];\n          } else {\n            matrix[rowIdx][colIdx] = values[i];\n          }\n        });\n\n        // Perform SVD\n        const { u, v } = SVD(matrix, NUM_FACTORS);\n        \n        const userFactors = shouldTranspose ? v : u;\n        const itemFactors = shouldTranspose ? u : v;\n\n        setModel({\n          users,\n          items,\n          userBias,\n          itemBias,\n          globalMean,\n          userFactors,\n          itemFactors: itemFactors[0], // Align with sklearn's components_\n          userMap: new Map(users.map((u, i) => [u, i])),\n          itemMap: new Map(items.map((i, idx) => [i, idx])),\n          ratings\n        });\n\n      } catch (error) {\n        console.error(\"Error:\", error);\n        alert(`Initialization failed: ${error.message}`);\n      }\n      setIsProcessing(false);\n    };\n    initializeModel();\n  }, []);\n\n  const getRecommendations = (userId) => {\n    if (!model || !model.userMap.has(userId)) return [];\n    \n    const userIdx = model.userMap.get(userId);\n    const userFactor = model.userFactors[userIdx];\n    const userB = model.userBias[userId] || 0;\n\n    return model.items\n      .filter(item => !model.ratings.some(r => r.user === userId && r.item === item))\n      .map(item => {\n        const itemIdx = model.itemMap.get(item);\n        const itemB = model.itemBias[item] || 0;\n        const score = model.globalMean + userB + itemB + \n          numeric.dot(userFactor, model.itemFactors[itemIdx]);\n        return { item, score };\n      })\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 10);\n  };\n\n  const dotProduct = (a, b) => a.reduce((sum, val, i) => sum + val * b[i], 0);\n\n  const generateGraphData = (recommendations) => {\n    const nodes = [{ id: `user-${userId}`, label: `User ${userId}`, level: 0 }];\n    const edges = [];\n\n    recommendations.forEach(({ item }) => {\n      nodes.push({ id: item, label: `${item} (Recommended)`, level: 1 });\n      edges.push({ source: `user-${userId}`, target: item });\n    });\n\n    return { nodes, edges };\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!userId || !model) return;\n\n    const recommendations = getRecommendations(userId);\n    setGraphData(generateGraphData(recommendations));\n    setSelectedNode(null);\n  };\n\n  const handleNodeClick = useCallback((nodeId) => {\n    setSelectedNode(nodeId);\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <h1>Recommendation Graph</h1>\n      {isProcessing && <div className=\"loading\">Processing data...</div>}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={userId}\n          onChange={(e) => setUserId(e.target.value)}\n          placeholder=\"Enter User ID\"\n          required\n        />\n        <button type=\"submit\">Generate</button>\n      </form>\n\n      <GrapherWrapper\n        nodes={graphData.nodes}\n        edges={graphData.edges}\n        onNodeClick={handleNodeClick}\n      />\n\n      {selectedNode && (\n        <div className=\"details\">\n          <h3>Node: {selectedNode}</h3>\n          {selectedNode.startsWith('user-') ? (\n            <p>User ID: {userId}</p>\n          ) : (\n            <p>Product ID: {selectedNode}</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,GAAG,QAAQ,QAAQ;AAC5B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,eAAe,GAAG,IAAI;AAC5B,MAAMC,WAAW,GAAG,EAAE;AAEtB,MAAMC,WAAW,GAAIC,WAAW,IAAK;EACnC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCX,IAAI,CAACY,KAAK,CAACJ,WAAW,EAAE;MACtBK,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE,IAAI;MACnBC,QAAQ,EAAGC,MAAM,IAAK;QACpBN,OAAO,CAACM,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,EAAEb,eAAe,CAAC,CAAC;MAChD,CAAC;MACDc,KAAK,EAAGA,KAAK,IAAKR,MAAM,CAACQ,KAAK;IAChC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC;IAAE6B,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EACpE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMkC,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClCD,eAAe,CAAC,IAAI,CAAC;MACrB,IAAI;QACF,MAAME,OAAO,GAAG,MAAM1B,WAAW,CAAC,yBAAyB,CAAC;QAC5D,MAAM2B,SAAS,GAAGD,OAAO,CAACE,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,MAAM,IAAI,CAAC,CAAC;QAExD,MAAMC,OAAO,GAAGJ,SAAS,CAACK,GAAG,CAACH,GAAG,KAAK;UACpCI,IAAI,EAAEC,MAAM,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC;UACpBM,IAAI,EAAED,MAAM,CAACL,GAAG,CAAC,CAAC,CAAC,CAAC;UACpBO,MAAM,EAAEC,UAAU,CAACR,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI;QAChC,CAAC,CAAC,CAAC,CAACD,MAAM,CAACU,CAAC,IAAIA,CAAC,CAACL,IAAI,IAAIK,CAAC,CAACH,IAAI,CAAC;QAEjC,MAAMI,KAAK,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACT,OAAO,CAACC,GAAG,CAACM,CAAC,IAAIA,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;QACpD,MAAMQ,KAAK,GAAG,CAAC,GAAG,IAAID,GAAG,CAACT,OAAO,CAACC,GAAG,CAACM,CAAC,IAAIA,CAAC,CAACH,IAAI,CAAC,CAAC,CAAC;;QAEpD;QACA,MAAMO,UAAU,GAAGX,OAAO,CAACY,MAAM,CAAC,CAACC,GAAG,EAAEN,CAAC,KAAKM,GAAG,GAAGN,CAAC,CAACF,MAAM,EAAE,CAAC,CAAC,GAAGL,OAAO,CAACD,MAAM;;QAEjF;QACA,MAAMe,QAAQ,GAAGd,OAAO,CAACY,MAAM,CAAC,CAACG,GAAG,EAAER,CAAC,KAAK;UAC1CQ,GAAG,CAACR,CAAC,CAACL,IAAI,CAAC,GAAGa,GAAG,CAACR,CAAC,CAACL,IAAI,CAAC,IAAI;YAAEW,GAAG,EAAE,CAAC;YAAEG,KAAK,EAAE;UAAE,CAAC;UACjDD,GAAG,CAACR,CAAC,CAACL,IAAI,CAAC,CAACW,GAAG,IAAIN,CAAC,CAACF,MAAM,GAAGM,UAAU;UACxCI,GAAG,CAACR,CAAC,CAACL,IAAI,CAAC,CAACc,KAAK,EAAE;UACnB,OAAOD,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QAENE,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC,CAACK,OAAO,CAACjB,IAAI,IAAI;UACpCY,QAAQ,CAACZ,IAAI,CAAC,GAAGY,QAAQ,CAACZ,IAAI,CAAC,CAACW,GAAG,GAAGC,QAAQ,CAACZ,IAAI,CAAC,CAACc,KAAK;QAC5D,CAAC,CAAC;;QAEF;QACA,MAAMI,QAAQ,GAAGpB,OAAO,CAACY,MAAM,CAAC,CAACG,GAAG,EAAER,CAAC,KAAK;UAC1C,MAAMc,QAAQ,GAAGd,CAAC,CAACF,MAAM,GAAGM,UAAU,GAAGG,QAAQ,CAACP,CAAC,CAACL,IAAI,CAAC;UACzDa,GAAG,CAACR,CAAC,CAACH,IAAI,CAAC,GAAGW,GAAG,CAACR,CAAC,CAACH,IAAI,CAAC,IAAI;YAAES,GAAG,EAAE,CAAC;YAAEG,KAAK,EAAE;UAAE,CAAC;UACjDD,GAAG,CAACR,CAAC,CAACH,IAAI,CAAC,CAACS,GAAG,IAAIQ,QAAQ;UAC3BN,GAAG,CAACR,CAAC,CAACH,IAAI,CAAC,CAACY,KAAK,EAAE;UACnB,OAAOD,GAAG;QACZ,CAAC,EAAE,CAAC,CAAC,CAAC;QAENE,MAAM,CAACC,IAAI,CAACE,QAAQ,CAAC,CAACD,OAAO,CAACf,IAAI,IAAI;UACpCgB,QAAQ,CAAChB,IAAI,CAAC,GAAGgB,QAAQ,CAAChB,IAAI,CAAC,CAACS,GAAG,GAAGO,QAAQ,CAAChB,IAAI,CAAC,CAACY,KAAK;QAC5D,CAAC,CAAC;;QAEF;QACA,MAAMM,IAAI,GAAG,EAAE;QACf,MAAMC,IAAI,GAAG,EAAE;QACf,MAAMC,MAAM,GAAG,EAAE;QAEjBxB,OAAO,CAACmB,OAAO,CAACZ,CAAC,IAAI;UACnB,MAAMc,QAAQ,GAAGd,CAAC,CAACF,MAAM,GAAGM,UAAU,GAAGG,QAAQ,CAACP,CAAC,CAACL,IAAI,CAAC,GAAGkB,QAAQ,CAACb,CAAC,CAACH,IAAI,CAAC;UAC5EkB,IAAI,CAACG,IAAI,CAACjB,KAAK,CAACkB,OAAO,CAACnB,CAAC,CAACL,IAAI,CAAC,CAAC;UAChCqB,IAAI,CAACE,IAAI,CAACf,KAAK,CAACgB,OAAO,CAACnB,CAAC,CAACH,IAAI,CAAC,CAAC;UAChCoB,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC;QACvB,CAAC,CAAC;;QAEF;QACA,MAAMM,eAAe,GAAGnB,KAAK,CAACT,MAAM,GAAGW,KAAK,CAACX,MAAM;QACnD,MAAM6B,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;UAAE/B,MAAM,EAAE4B,eAAe,GAAGjB,KAAK,CAACX,MAAM,GAAGS,KAAK,CAACT;QAAO,CAAC,EAAE,MACnF,IAAI8B,KAAK,CAACF,eAAe,GAAGnB,KAAK,CAACT,MAAM,GAAGW,KAAK,CAACX,MAAM,CAAC,CAACgC,IAAI,CAAC,CAAC,CACjE,CAAC;QAEDT,IAAI,CAACH,OAAO,CAAC,CAACa,MAAM,EAAEC,CAAC,KAAK;UAC1B,MAAMC,MAAM,GAAGX,IAAI,CAACU,CAAC,CAAC;UACtB,IAAIN,eAAe,EAAE;YACnBC,MAAM,CAACM,MAAM,CAAC,CAACF,MAAM,CAAC,GAAGR,MAAM,CAACS,CAAC,CAAC;UACpC,CAAC,MAAM;YACLL,MAAM,CAACI,MAAM,CAAC,CAACE,MAAM,CAAC,GAAGV,MAAM,CAACS,CAAC,CAAC;UACpC;QACF,CAAC,CAAC;;QAEF;QACA,MAAM;UAAEE,CAAC;UAAEC;QAAE,CAAC,GAAGxE,GAAG,CAACgE,MAAM,EAAE5D,WAAW,CAAC;QAEzC,MAAMqE,WAAW,GAAGV,eAAe,GAAGS,CAAC,GAAGD,CAAC;QAC3C,MAAMG,WAAW,GAAGX,eAAe,GAAGQ,CAAC,GAAGC,CAAC;QAE3C7C,QAAQ,CAAC;UACPiB,KAAK;UACLE,KAAK;UACLI,QAAQ;UACRM,QAAQ;UACRT,UAAU;UACV0B,WAAW;UACXC,WAAW,EAAEA,WAAW,CAAC,CAAC,CAAC;UAAE;UAC7BC,OAAO,EAAE,IAAIC,GAAG,CAAChC,KAAK,CAACP,GAAG,CAAC,CAACkC,CAAC,EAAEF,CAAC,KAAK,CAACE,CAAC,EAAEF,CAAC,CAAC,CAAC,CAAC;UAC7CQ,OAAO,EAAE,IAAID,GAAG,CAAC9B,KAAK,CAACT,GAAG,CAAC,CAACgC,CAAC,EAAES,GAAG,KAAK,CAACT,CAAC,EAAES,GAAG,CAAC,CAAC,CAAC;UACjD1C;QACF,CAAC,CAAC;MAEJ,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACd8D,OAAO,CAAC9D,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B+D,KAAK,CAAC,0BAA0B/D,KAAK,CAACgE,OAAO,EAAE,CAAC;MAClD;MACApD,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC;IACDC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoD,kBAAkB,GAAI9D,MAAM,IAAK;IACrC,IAAI,CAACM,KAAK,IAAI,CAACA,KAAK,CAACiD,OAAO,CAACQ,GAAG,CAAC/D,MAAM,CAAC,EAAE,OAAO,EAAE;IAEnD,MAAMgE,OAAO,GAAG1D,KAAK,CAACiD,OAAO,CAACU,GAAG,CAACjE,MAAM,CAAC;IACzC,MAAMkE,UAAU,GAAG5D,KAAK,CAAC+C,WAAW,CAACW,OAAO,CAAC;IAC7C,MAAMG,KAAK,GAAG7D,KAAK,CAACwB,QAAQ,CAAC9B,MAAM,CAAC,IAAI,CAAC;IAEzC,OAAOM,KAAK,CAACoB,KAAK,CACfb,MAAM,CAACO,IAAI,IAAI,CAACd,KAAK,CAACU,OAAO,CAACoD,IAAI,CAAC7C,CAAC,IAAIA,CAAC,CAACL,IAAI,KAAKlB,MAAM,IAAIuB,CAAC,CAACH,IAAI,KAAKA,IAAI,CAAC,CAAC,CAC9EH,GAAG,CAACG,IAAI,IAAI;MACX,MAAMiD,OAAO,GAAG/D,KAAK,CAACmD,OAAO,CAACQ,GAAG,CAAC7C,IAAI,CAAC;MACvC,MAAMkD,KAAK,GAAGhE,KAAK,CAAC8B,QAAQ,CAAChB,IAAI,CAAC,IAAI,CAAC;MACvC,MAAMmD,KAAK,GAAGjE,KAAK,CAACqB,UAAU,GAAGwC,KAAK,GAAGG,KAAK,GAC5CE,OAAO,CAACC,GAAG,CAACP,UAAU,EAAE5D,KAAK,CAACgD,WAAW,CAACe,OAAO,CAAC,CAAC;MACrD,OAAO;QAAEjD,IAAI;QAAEmD;MAAM,CAAC;IACxB,CAAC,CAAC,CACDG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACL,KAAK,GAAGI,CAAC,CAACJ,KAAK,CAAC,CACjC3E,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACjB,CAAC;EAED,MAAMiF,UAAU,GAAGA,CAACF,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC/C,MAAM,CAAC,CAACC,GAAG,EAAEiD,GAAG,EAAE7B,CAAC,KAAKpB,GAAG,GAAGiD,GAAG,GAAGF,CAAC,CAAC3B,CAAC,CAAC,EAAE,CAAC,CAAC;EAE3E,MAAM8B,iBAAiB,GAAIC,eAAe,IAAK;IAC7C,MAAM5E,KAAK,GAAG,CAAC;MAAE6E,EAAE,EAAE,QAAQjF,MAAM,EAAE;MAAEkF,KAAK,EAAE,QAAQlF,MAAM,EAAE;MAAEmF,KAAK,EAAE;IAAE,CAAC,CAAC;IAC3E,MAAM9E,KAAK,GAAG,EAAE;IAEhB2E,eAAe,CAAC7C,OAAO,CAAC,CAAC;MAAEf;IAAK,CAAC,KAAK;MACpChB,KAAK,CAACqC,IAAI,CAAC;QAAEwC,EAAE,EAAE7D,IAAI;QAAE8D,KAAK,EAAE,GAAG9D,IAAI,gBAAgB;QAAE+D,KAAK,EAAE;MAAE,CAAC,CAAC;MAClE9E,KAAK,CAACoC,IAAI,CAAC;QAAE2C,MAAM,EAAE,QAAQpF,MAAM,EAAE;QAAEqF,MAAM,EAAEjE;MAAK,CAAC,CAAC;IACxD,CAAC,CAAC;IAEF,OAAO;MAAEhB,KAAK;MAAEC;IAAM,CAAC;EACzB,CAAC;EAED,MAAMiF,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACxF,MAAM,IAAI,CAACM,KAAK,EAAE;IAEvB,MAAM0E,eAAe,GAAGlB,kBAAkB,CAAC9D,MAAM,CAAC;IAClDG,YAAY,CAAC4E,iBAAiB,CAACC,eAAe,CAAC,CAAC;IAChDS,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,eAAe,GAAGjH,WAAW,CAAEkH,MAAM,IAAK;IAC9CF,eAAe,CAACE,MAAM,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7G,OAAA;IAAK8G,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B/G,OAAA;MAAA+G,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BzF,YAAY,iBAAI1B,OAAA;MAAK8G,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAElEnH,OAAA;MAAMoH,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,gBAC3B/G,OAAA;QACEqH,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpG,MAAO;QACdqG,QAAQ,EAAGd,CAAC,IAAKtF,SAAS,CAACsF,CAAC,CAACF,MAAM,CAACe,KAAK,CAAE;QAC3CE,WAAW,EAAC,eAAe;QAC3BC,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFnH,OAAA;QAAQqH,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eAEPnH,OAAA,CAACH,cAAc;MACbyB,KAAK,EAAEF,SAAS,CAACE,KAAM;MACvBC,KAAK,EAAEH,SAAS,CAACG,KAAM;MACvBmG,WAAW,EAAEd;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,EAEDQ,YAAY,iBACX3H,OAAA;MAAK8G,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtB/G,OAAA;QAAA+G,QAAA,GAAI,QAAM,EAACY,YAAY;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC5BQ,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,gBAC/B5H,OAAA;QAAA+G,QAAA,GAAG,WAAS,EAAC7F,MAAM;MAAA;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,gBAExBnH,OAAA;QAAA+G,QAAA,GAAG,cAAY,EAACY,YAAY;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACjC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClG,EAAA,CA1LQD,GAAG;AAAA6G,EAAA,GAAH7G,GAAG;AA4LZ,eAAeA,GAAG;AAAC,IAAA6G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}